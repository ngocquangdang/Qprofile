{"version":3,"sources":["components/imgs/cover.jpg","components/imgs/facebook.svg","components/imgs/skype.svg","components/imgs/avt.jpg","components/HomePage.js","components/AboutPage.js","components/MenuLeft.js","components/MyProject.js","components/MyExperience.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomePage","Container","id","styled","div","AboutPage","Avatar","src","ImageCover","alt","style","width","About","Title","Detail","Paragrap","ContactGroup","key","description","unCap","map","item","index","Contact","Label","Description","cap","Button","href","black","h1","label","props","a","MenuLeft","Header","backgroundImage","Avatars","Menu","url","name","Item","Link","Icon","Facebook","Skype","ul","h5","li","img","MyProject","MyExperience","Experience","Skill","MenuList","Content","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.75472516.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.462afdc8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.17cd43f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/skype.c15731bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/avt.c2b54396.jpg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function HomePage() {\r\n  return (\r\n      <Container id='home-page'>\r\n        <p>Home Page</p>\r\n      </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ImageCover from './imgs/cover.jpg';\r\nexport default function AboutPage() {\r\n  const initdata = [\r\n    { key: 'name', description: 'quang ngoc dang' },\r\n    { key: 'phone', description: '+84 984 863 639' },\r\n    { key: 'birthday', description: '06/13/1998' },\r\n    { key: 'email', description: 'ngocquang.nq98@gmail.com', unCap: true},\r\n    {\r\n      key: 'address',\r\n      description: '459 ton duc thang str, hoa khanh nam, da nang',\r\n    },\r\n    { key: 'facebook', description: 'fb.com/ngoc.quang256', unCap: true },\r\n  ];\r\n  return (\r\n    <Container id='about-me'>\r\n      <Avatar>\r\n        <img src={ImageCover} alt='' style={{ width: '100%' }} />\r\n      </Avatar>\r\n      <About>\r\n        <Title>about me</Title>\r\n        <Detail>\r\n          <Paragrap>\r\n            Sed ut perspiciatis unde accusantium doloremque laudantium,totam rem\r\n            aperiam. Sed ut perspiciatis unde omnis iste natus error sit\r\n            voluptatem accusantium doloremque laudantium,totam rem aperiam,\r\n            eaque ipsa quae ab illo inventore veritatis et quasi.\r\n          </Paragrap>\r\n          <ContactGroup>\r\n            {initdata.map((item, index) => (\r\n              <Contact key={index}>\r\n                <Label>{item.key}: </Label>\r\n                <Description cap={item.unCap}>{item.description}</Description>\r\n              </Contact>\r\n            ))}\r\n          </ContactGroup>\r\n        </Detail>\r\n        <Button href=\"#my-experience\" black>experience</Button>\r\n        <Button href=\"#my-project\"> projects</Button>\r\n      </About>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  padding: 100px 3%;\r\n  justify-content: space-around;\r\n`;\r\nconst Avatar = styled.div`\r\n  width: 430px;\r\n`;\r\nconst About = styled.div`\r\n  width: 570px;\r\n`;\r\nconst Title = styled.h1`\r\n  text-transform: capitalize;\r\n`;\r\nconst Detail = styled.div`\r\n  margin-bottom: 30px;\r\n`;\r\nconst Paragrap = styled.div`\r\n  color: #333;\r\n  padding-bottom: 20px;\r\n  border-bottom: 1px solid gray;\r\n`;\r\nconst ContactGroup = styled.div`\r\n  text-transform: capitalize;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  margin: 10px 0;\r\n`;\r\nconst Contact = styled.div`\r\n  line-height: 2.5;\r\n  width: 270px;\r\n  \r\n`;\r\nconst Label = styled.label`\r\n  font-weight: 700;\r\n`;\r\nconst Description = styled.label`\r\n  text-transform: ${props => props.cap ? \"none\": \"capitalize\" };\r\n  color: #333;\r\n  font-weight: 400;\r\n`;\r\nconst Button = styled.a`\r\n  background: ${props => props.black ? \"black\" : \"white\"};\r\n  color: ${props => props.black ? \"white\" : \"black\"};\r\n  text-transform: capitalize;\r\n  padding: 1rem 3rem;\r\n  margin-right: 20px;\r\n  border-radius: 30px;\r\n  box-shadow: 2px 2px 10px -1px rgba(0, 0, 0, 0.14);\r\n  text-decoration: none;\r\n  &:hover{\r\n    color: #3e43e9;\r\n    cursor: pointer;\r\n  }\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Facebook from './imgs/facebook.svg';\r\nimport Skype from './imgs/skype.svg';\r\nimport Avatars from './imgs/avt.jpg';\r\nexport default function MenuLeft() {\r\n  const URL = [\r\n    { url: 'home-page', name: 'home' },\r\n    { url: 'about-me', name: 'about' },\r\n    { url: 'my-experience', name: 'experience' },\r\n    { url: 'my-project', name: 'project' },\r\n  ];\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Avatar style={{ backgroundImage: `url(${Avatars})` }} />\r\n        <Title>quang n. dang</Title>\r\n      </Header>\r\n      <Menu>\r\n        {URL.map((url, index) => (\r\n          <Item key={index}>\r\n            <Link href={`#${url.url}`}>{url.name}</Link>\r\n          </Item>\r\n        ))}\r\n      </Menu>\r\n      <Contact>\r\n        <Icon src={Facebook}></Icon>\r\n        <Icon src={Skype}></Icon>\r\n      </Contact>\r\n    </Container>\r\n  );\r\n}\r\nconst Container = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100%;\r\n  padding-left: 0;\r\n  margin-top: 20%;\r\n`;\r\nconst Header = styled.div``;\r\nconst Avatar = styled.div`\r\n  width: 150px;\r\n  height: 150px;\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n`;\r\nconst Title = styled.h5`\r\n  color: white;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n`;\r\nconst Menu = styled.ul`\r\n  margin: 15% 0;\r\n  padding-left: 0;\r\n`;\r\nconst Item = styled.li`\r\n  padding: 0.7rem;\r\n  list-style: none;\r\n`;\r\nconst Link = styled.a`\r\n  text-transform: capitalize;\r\n  text-decoration: none;\r\n  color: white;\r\n`;\r\nconst Contact = styled.div`\r\n  display: flex;\r\n  color: white;\r\n`;\r\nconst Icon = styled.img`\r\n  margin-right: 6px;\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function MyProject() {\r\n  return (\r\n      <Container id='my-project'>\r\n        <p>My project</p>\r\n      </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport default function MyExperience() {\r\n  return (\r\n    <Container id='my-experience'>\r\n      <Experience>\r\n        <div> Experience</div>\r\n      </Experience>\r\n      <Skill>\r\n        \r\n      </Skill>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  padding: 100px 3%;\r\n  background-color: #f6f7fd;\r\n  justify-content: space-around;\r\n`;\r\nconst Experience = styled.div`\r\n  width: 430px;\r\n`;\r\nconst Skill = styled.div`\r\n  width: 570px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport AboutPage from \"./components/AboutPage\";\r\nimport MenuLeft from \"./components/MenuLeft\";\r\nimport MyProeject from \"./components/MyProject\";\r\nimport MyExperience from \"./components/MyExperience\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <MenuList>\r\n        <MenuLeft></MenuLeft>\r\n      </MenuList>\r\n      <Content>\r\n        <HomePage />\r\n        <AboutPage />\r\n        <MyExperience />\r\n        <MyProeject />\r\n      </Content>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\nconst MenuList = styled.div`\r\n  position: fixed;\r\n  background: black;\r\n  height: 100%;\r\n  width: 300px;\r\n`;\r\nconst Content = styled.div`\r\n  position: relative;\r\n  background: white;\r\n  margin-left: 300px;\r\n  margin-right: 0;\r\n  width: 100%;\r\n`;\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}